name: Rust

on: [push]

jobs:
  test:
    name: tests (${{ matrix.rust }} on ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        rust: [beta, nightly]
    steps:
      - uses: actions/checkout@master
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
            toolchain: ${{ matrix.rust }}
            override: true
      - name: Version
        run: rustup --version ; cargo --version --verbose ; rustc --version --verbose
      - name: Build
        run: cargo build --all --verbose
      - name: Run tests
        run: cargo test --all --verbose 
      - name: Run ignored tests
        if: matrix.os != 'windows-latest'
        env:
          CELESTE_DIALOG_URL: ${{ secrets.CELESTE_DIALOG_URL }} # password protected
        run: cargo test --all --verbose -- --ignored
  should-lint:
    name: lint check
    runs-on: ubuntu-latest

    outputs:
      user-type: ${{ steps.check.outputs.user-type }}

    steps:
      - id: check
        run: echo "::set-output name=user-type::$(jq -r '.pull_request.user.type' "$GITHUB_EVENT_PATH")"

  lint:
    name: lint
    runs-on: ubuntu-latest

    needs: should-lint
    if: needs.should-lint.outputs.user-type != 'Bot'

    steps:
      - uses: actions/checkout@master
      - uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly
            override: true
            components: rustfmt, clippy
      - name: Formatting
        run: cargo fmt --all -- --check
      - name: Idioms
        run: cargo clippy --all -- -D clippy::all
