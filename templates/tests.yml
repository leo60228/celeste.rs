parameters:
  toolchain: 'stable'
  os: 'ubuntu'

jobs:
  - job: ${{ format('{0}_{1}', parameters.os, parameters.toolchain) }}
    displayName: ${{ format('{0} @ Rust {1}', parameters.vmImage, parameters.toolchain) }} # 'vim oddity fix
    variables:
      rustup_toolchain: ${{ parameters.toolchain }}
    pool:
      ${{ if eq(parameters.os, 'ubuntu') }}:
        vmImage: 'ubuntu-16.04'
      ${{ if eq(parameters.os, 'windows') }}:
        vmImage: 'vs2017-win2016'
      ${{ if eq(parameters.os, 'macos') }}:
        vmImage: 'macos-10.13'
    steps:
      - ${{ if eq(variables['Agent.OS'], 'Windows_NT') }}:
        - script: |
            curl -sSf -o rustup-init.exe https://win.rustup.rs
            rustup-init.exe -y --default-toolchain %RUSTUP_TOOLCHAIN%
          displayName: Install Rust
      - ${{ if ne(variables['Agent.OS'], 'Windows_NT') }}:
        - script: |
            curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain $RUSTUP_TOOLCHAIN
            echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
          displayName: Install Rust
      - script: cargo build --all
        displayName: Build
      - script: cargo test --all
        displayName: Tests
    ${{ if eq(parameters.toolchain, 'nightly') }}:
      continueOnError: true
